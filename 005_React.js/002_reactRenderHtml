In React, we can render HTML using JSX (JavaScript XML). JSX is a syntax extension for JavaScript that allows you to write HTML-like code within your JavaScript code. 
JSX is transformed into JavaScript before it's rendered to the DOM. Here's how you can render HTML using JSX in a React component:

#1-using vite ---

#1_index.html--This is the HTML file that serves as the entry point for your React application. It includes a basic HTML structure with a <div> element that has an id of 'root'.

  <!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>



//2_App.sx-- define react component 
function App() {

  return (
    <>
      <h1>chai aur react with vite</h1> 
    </>
  )
}

export default App
Note:- to define or render multiple elements we can push all into div or can use fragment <>  </> , written inside everything known as jsx elements 


//#3_main.jsx - import libraries and render react component -- React renders HTML to the web page by using a function called createRoot() and its method render().
The createRoot() function-  takes one argument, an HTML element. The purpose of the function is to define the HTML element where a React component should be displayed.
The render() method is then called to define the React component that should be rendered.


import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App.jsx'

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
)


Note:- react.strictmode is optionl we can remove it  , render method will take only one jsx elements as input to use multiple jsx tag use div tag


